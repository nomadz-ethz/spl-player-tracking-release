# use this instead of yacs to be compatible with detectron2
from yacs.config import CfgNode

__C = CfgNode()

# Short-term tracker (Tracktor) configuration parameters
__C.TRACKER = CfgNode()
__C.TRACKER.OBJECT_DETECTOR = CfgNode()
__C.TRACKER.OBJECT_DETECTOR.CONFIG = ""
__C.TRACKER.OBJECT_DETECTOR.WEIGHTS = ""
__C.TRACKER.SIGMA_ACTIVE = 0.5
__C.TRACKER.ACTIVE_TRACKS_NMS_THRESH = 0.6
__C.TRACKER.NEW_TRACKS_NMS_THRESH = 0.3
__C.TRACKER.INACTIVE_PATIENCE = 1
__C.TRACKER.MAX_ACTIVE_TRACKS = 15
__C.TRACKER.IGNORE_BALLS = True

__C.NUMBER_DETECTOR = CfgNode()
__C.NUMBER_DETECTOR.WEIGHTS = ""
__C.NUMBER_DETECTOR.SCORE_THRESH = 0.5
__C.NUMBER_DETECTOR.DEVICE = "cpu"

__C.TEAM_DETECTOR = CfgNode()
__C.TEAM_DETECTOR.WEIGHTS = ""
__C.TEAM_DETECTOR.SCORE_THRESH = 0.5
__C.TEAM_DETECTOR.DEVICE = "cpu"

__C.GLOBAL_OPTIMIZER = CfgNode()
__C.GLOBAL_OPTIMIZER.NUM_TRACKS = 10
__C.GLOBAL_OPTIMIZER.TIME_LIMIT = 240

__C.COST_COMPUTER = CfgNode()
__C.COST_COMPUTER.SAVE_COSTS = False
__C.COST_COMPUTER.MAX_SELF_LOCALIZATION_MATCHING_DISTANCE = 9000
__C.COST_COMPUTER.MIN_TRACKLET_LIFETIME = 50
__C.COST_COMPUTER.MAX_PAIRWISE_TRACKLET_DISTANCE = 1000
__C.COST_COMPUTER.PAIRWISE_DISTANCE_COST_NORMALIZER = 500

__C.COST_COMPUTER.SELF_LOCALIZATION_COST_WEIGHT = 1.5
__C.COST_COMPUTER.NUMBER_DETECTION_COST_WEIGHT = 0.0
__C.COST_COMPUTER.TEAM_DETECTION_COST_WEIGHT = 0.3
__C.COST_COMPUTER.TRACKLET_LIFETIME_COST_WEIGHT = 0.8
__C.COST_COMPUTER.FALLEN_EVENTS_COST_WEIGHT = 0.0
__C.COST_COMPUTER.TRACKLET_TO_TRACKLET_COST_WEIGHT = 1.0

__C.COST_COMPUTER.UNARY_COSTS_OFFSET = -0.6
__C.COST_COMPUTER.PAIRWISE_COSTS_OFFSET = -0.2

__C.MISC = CfgNode()
__C.MISC.IGNORE_PENALIZED_PLAYERS = False
__C.MISC.PENALIZED_EVENT_DELAY = 0


def get_default_cfg():
    return __C.clone()
