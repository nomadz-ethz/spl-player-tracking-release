MODEL:
  META_ARCHITECTURE: "RetinaNet"
  BACKBONE:
    NAME: "build_retinanet_resnet_fpn_backbone"
  RESNETS:
    OUT_FEATURES: ["res3", "res4", "res5"]
  ANCHOR_GENERATOR:
    SIZES: !!python/object/apply:eval ["[[x, x * 2**(1.0/3), x * 2**(2.0/3) ] for x in [32, 64, 128, 256, 512 ]]"]
  FPN:
    IN_FEATURES: ["res3", "res4", "res5"]
  RETINANET:
    NUM_CLASSES: 2
    IOU_THRESHOLDS: [0.4, 0.5]
    IOU_LABELS: [0, -1, 1]
    SMOOTH_L1_LOSS_BETA: 0.0
DATASETS:
  TRAIN: ("orc_rc22_object_detection_train",)
  TEST: ("orc_rc22_object_detection_val",)
SOLVER:
  IMS_PER_BATCH: 4
  BASE_LR: 0.000025  # Note that RetinaNet uses a different default learning rate
  STEPS: (30000, 40000)
  MAX_ITER: 50000
  CHECKPOINT_PERIOD: 2500
INPUT:
  MIN_SIZE_TRAIN: (800, 864, 928, 992, 1056, 1080)
  MAX_SIZE_TRAIN: 1920
  MIN_SIZE_TEST: 0 # disable resize during testing
  MAX_SIZE_TEST: 1920
TEST:
  EVAL_PERIOD: 0
VERSION: 2
